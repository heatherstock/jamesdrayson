{"version":3,"sources":["webpack:///./src/components/sharedStyles.js","webpack:///./src/pages/economist.js"],"names":["Heading","styled","h1","Wrapper","div","Text","p","StyledLink","Link","TextLink","List","ul","ListItem","li","Div","CardImages","MobileImages","Economist","Image","Img","data","useStaticQuery","to","target","fluid","worldIfHomepage","childImageSharp","worldIfArticle","fixed","tq","site","siteMetadata","workLinks","map","link","name","key"],"mappings":"6FAAA,gXAGaA,EAAUC,IAAOC,GAAV,0EAAGD,CAAH,qDAMPE,EAAUF,IAAOG,IAAV,0EAAGH,CAAH,wDAKPI,EAAOJ,IAAOK,EAAV,uEAAGL,CAAH,uBAIJM,EAAaN,YAAOO,QAAV,6EAAGP,CAAH,uXA2BVQ,EAAWR,YAAOO,QAAV,2EAAGP,CAAH,qRAsBRS,EAAOT,IAAOU,GAAV,uEAAGV,CAAH,6EAQJW,EAAWX,IAAOY,GAAV,2EAAGZ,CAAH,oLAaRa,EAAMb,IAAOG,IAAV,sEAAGH,CAAH,gHAWHc,EAAad,IAAOG,IAAV,6EAAGH,CAAH,gHAWVe,EAAef,IAAOG,IAAV,+EAAGH,CAAH,uH,kCC9GzB,qGA6EegB,UAtEG,WAChB,IAAMC,EAAQjB,YAAOkB,KAAV,uEAAGlB,CAAH,wIAWLmB,EAAOC,yBAAe,cAkC5B,OACE,oCACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,sBACA,kBAAC,IAAD,4FAA4F,kBAAC,IAAD,CAAYC,GAAI,iCAAkCC,OAAO,UAAzD,gBAA5F,wGAA4R,kBAAC,IAAD,CAAYD,GAAI,oCAAqCC,OAAO,UAA5D,gBAA5R,ubACA,kBAACL,EAAD,CAAOM,MAAOJ,EAAKK,gBAAgBC,gBAAgBF,QACnD,kBAACN,EAAD,CAAOM,MAAOJ,EAAKO,eAAeD,gBAAgBF,QAClD,kBAACN,EAAD,CAAOU,MAAOR,EAAKS,GAAGH,gBAAgBE,QACtC,kBAAC,IAAD,KACGR,EAAKU,KAAKC,aAAaC,UAAUC,KAAI,SAAAC,GAAI,MAC1B,kBAAdA,EAAKC,KACH,KACA,kBAAC,IAAD,CAAYC,IAAKF,EAAKC,MAAtB,IACF,kBAAC,IAAD,CAAcb,GAAIY,EAAKA,MAAOA,EAAKC","file":"component---src-pages-economist-js-c0172ee47f965b983293.js","sourcesContent":["import { Link } from \"gatsby\"\nimport styled from \"styled-components\"\n\nexport const Heading = styled.h1`\n  margin-top: 6px;\n  padding-bottom: 12px;\n  color: black;\n`;\n\nexport const Wrapper = styled.div`\n  padding-bottom: 36px;\n  border-bottom: 3px solid black; \n`;\n\nexport const Text = styled.p`\nmargin-top: -24px;\n`;\n\nexport const StyledLink = styled(Link)`\n@media (max-width: 899px) {\n  font-size: 30px;\n  line-height: 42px;\n}\n  font-family: Work Sans, sans serif;\n  font-weight: 500;\n  font-size: 36px;\n  line-height: 48px;\n  padding-bottom: 2px;\n  color: black;\n  text-decoration: none;\n  border-bottom: 3px solid black;\n  margin-left: 12px;\n  &:visited {\n    border-bottom: 3px solid #777;\n    color: #777;\n  }\n  &:hover {\n    color: black;\n    border-bottom: none;\n  }\n  &: active {\n    border-bottom: 3px solid black;\n  }\n`;\n\nexport const TextLink = styled(Link)`\n@media (max-width: 899px) {\n  font-size: 30px;\n  line-height: 42px;\n}\n  padding-bottom: 1px;\n  color: black;\n  text-decoration: none;\n  border-bottom: 2px solid black;\n  &:visited {\n    border-bottom: 3px solid #777;\n    color: #777;\n  }\n  &:hover {\n    color: black;\n    border-bottom: none;\n  }\n  &: active {\n    border-bottom: 3px solid black;\n  }\n`;\n\nexport const List = styled.ul`\ndisplay: flex;  \nflex-wrap: wrap;\n  margin: 0;\n  padding-left: 0px;\n  padding-top: 72px;\n`;\n\nexport const ListItem = styled.li`\n@media (max-width: 899px) {\n  font-size: 30px;\n  line-height: 42px;\n}\n  padding: 0 6px;\n  font-family: Work Sans, sans serif;\n  font-weight: 500;\n  font-size: 36px;\n  line-height: 48px;\n  list-style-type: none;\n`;\n\nexport const Div = styled.div`\n@media (max-width: 899px) {\n  position: relative;\n\n}\n@media (min-width: 900px) {\n  display: flex;\n  justify-content: center;\n}\n`\n\nexport const CardImages = styled.div`\n@media (max-width: 899px) {\n  position: aboslute;\n}\n@media (min-width: 900px) {\n  float: left;\n}\n  width: 630px;\n  padding: 18px; \n`\n\nexport const MobileImages = styled.div`\n@media (max-width: 899px) {\n  position: aboslute;\n}\n@media (min-width: 900px) {\n  float: left;\n}\n  width: 284px;\n  padding-right: 36px; \n`","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport * as _ from \"../components/sharedStyles\"\nimport Layout from \"../components/layout\"\nimport styled from \"styled-components\";\nimport Img from \"gatsby-image\"\n\nconst Economist = () => {\n  const Image = styled(Img)`\n@media (max-width: 599px) {\n  display: none !important;\n}\nmargin-top: 36px;\nmargin-bottom: 0px;\noverflow-x: hidden;\nposition: relative;\npadding: 0;\n`;\n\n  const data = useStaticQuery(graphql`\n    query {\n      worldIfHomepage: file(relativePath: { eq: \"the-economist-world-if-homepage-dekstop.png\" }) {\n        childImageSharp {\n          fluid {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      worldIfArticle: file(relativePath: { eq: \"the-economist-world-if-article-dekstop.png\" }) {\n        childImageSharp {\n          fluid {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      tq: file(relativePath: { eq: \"the-economist-tq.png\" }) {\n        childImageSharp {\n          fixed(width: 1385, height: 701) {\n            ...GatsbyImageSharpFixed\n          }\n        }\n      }\n      site {\n        siteMetadata {\n          workLinks {\n            name\n            link\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Layout>\n        <_.Wrapper>\n          <_.Heading>The Economist</_.Heading>\n          <_.Text>Worked as part of a cross functional team designing for the master brand, including <_.TextLink to={'https://worldif.economist.com/'} target='_blank'>The World If</_.TextLink> (both the 2015 and 2016 editions) and ‘Technology Quarterly’ sub brands, and its sister publication <_.TextLink to={'https://theworldin.economist.com/'} target='_blank'>The World In</_.TextLink>. Worked closely with Editorial, other designers, UX and developers to iterate on design concepts to ensure fully responsive solutions to briefs were realised.    Designed social media templates, worked with the New York City office to ensure The Economist’s presence on ‘Facebook Instant Articles’ was on brand, and helped to create a more immersive experience for readers of The Economist’s ‘Essays’ and it’s other long form content.</_.Text>\n          <Image fluid={data.worldIfHomepage.childImageSharp.fluid} />\n          <Image fluid={data.worldIfArticle.childImageSharp.fluid} />\n          <Image fixed={data.tq.childImageSharp.fixed} />\n          <_.List>\n            {data.site.siteMetadata.workLinks.map(link => (\n              link.name === 'The Economist'\n              ? null\n              : <_.ListItem key={link.name}>/\n              <_.StyledLink to={link.link}>{link.name}</_.StyledLink>\n            </_.ListItem>\n            ))}\n          </_.List>\n        </_.Wrapper>\n      </Layout>\n    </>\n  )\n}\n\nexport default Economist"],"sourceRoot":""}